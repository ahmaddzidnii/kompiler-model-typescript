package kelompok.dua.maven.util;

import kelompok.dua.maven.model.ClassDefinition;
import kelompok.dua.maven.model.Domain;
import kelompok.dua.maven.model.XtumlModel;

import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;

/**
 * Utility untuk menghasilkan header komentar profesional dan compact
 */
public class HeaderGenerator {

    /**
     * Generate header untuk file interface
     */
    public static String generateInterfaceHeader(ClassDefinition classDef, Domain domain, XtumlModel model) {
        return String.format("""
                /**
                 * %s Interface - %s v%s
                 * Generated by xTUML TypeScript Compiler v1.1.0 on %s
                 *
                 * Entity: %s (%s) | Domain: %s | State Machine: %s
                 * %s
                 */
                """,
                classDef.getName(),
                model.getSystemName(),
                model.getVersion(),
                getCurrentTimestamp(),
                classDef.getName(),
                classDef.getKeyLetter(),
                domain.getName(),
                classDef.getStateMachine() != null ? "Yes" : "No",
                classDef.getDescription() != null ? classDef.getDescription() : "");
    }

    /**
     * Generate header untuk file class
     */
    public static String generateClassHeader(ClassDefinition classDef, Domain domain, XtumlModel model) {
        String inheritanceInfo = classDef.getInheritsFrom() != null ? " extends " + classDef.getInheritsFrom() : "";
        String abstractInfo = Boolean.TRUE.equals(classDef.getIsAbstract()) ? "Abstract " : "";
        String stateMachineInfo = classDef.getStateMachine() != null ? " | State Machine" : "";

        return String.format("""
                /**
                 * %s%s Class%s - %s v%s
                 * Generated by xTUML TypeScript Compiler v1.1.0 on %s
                 *
                 * Entity: %s (%s) | Domain: %s%s%s
                 * %s
                 */
                """,
                abstractInfo,
                classDef.getName(),
                inheritanceInfo,
                model.getSystemName(),
                model.getVersion(),
                getCurrentTimestamp(),
                classDef.getName(),
                classDef.getKeyLetter(),
                domain.getName(),
                stateMachineInfo,
                inheritanceInfo.isEmpty() ? "" : " | Inheritance",
                classDef.getDescription() != null ? classDef.getDescription() : "");
    }

    /**
     * Generate header untuk file index domain
     */
    public static String generateDomainIndexHeader(Domain domain, XtumlModel model) {
        int classCount = domain.getClasses() != null ? domain.getClasses().size() : 0;
        int relCount = domain.getRelationships() != null ? domain.getRelationships().size() : 0;

        return String.format("""
                /**
                 * %s Domain Index - %s v%s
                 * Generated by xTUML TypeScript Compiler v1.1.0 on %s
                 *
                 * Domain: %s (%s) | Classes: %d | Relationships: %d
                 * Auto-generated exports for all domain entities
                 */
                """,
                domain.getName(),
                model.getSystemName(),
                model.getVersion(),
                getCurrentTimestamp(),
                domain.getName(),
                domain.getKeyLetter(),
                classCount,
                relCount);
    }

    /**
     * Generate header untuk main index file
     */
    public static String generateMainIndexHeader(XtumlModel model) {
        int totalClasses = model.getDomains().stream()
                .mapToInt(d -> d.getClasses() != null ? d.getClasses().size() : 0)
                .sum();
        int totalRelationships = model.getDomains().stream()
                .mapToInt(d -> d.getRelationships() != null ? d.getRelationships().size() : 0)
                .sum();

        return String.format("""
                /**
                 * %s System Index v%s
                 * Generated by xTUML TypeScript Compiler v1.1.0 on %s
                 *
                 * Domains: %d | Classes: %d | Relationships: %d
                 * Complete type-safe exports for all system entities
                 */
                """,
                model.getSystemName(),
                model.getVersion(),
                getCurrentTimestamp(),
                model.getDomains().size(),
                totalClasses,
                totalRelationships);
    }

    /**
     * Get current timestamp
     */
    private static String getCurrentTimestamp() {
        return LocalDateTime.now().format(DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss"));
    }
}